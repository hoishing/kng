{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"kng","text":"<p>a collection of python utility functions for daily use</p> <p>\ud83d\udd17 source code</p>"},{"location":"#installation","title":"Installation","text":"<ul> <li><code>pip install kng</code></li> </ul>"},{"location":"#usage","title":"Usage","text":"<p>see reference for complete list of utility functions</p>"},{"location":"#need-help","title":"Need Help?","text":"<p>Open a github issue or ping me on Twitter </p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#040-2023-03-14","title":"0.4.0 (2023-03-14)","text":""},{"location":"changelog/#new-features","title":"New Features","text":"<ul> <li>add pd, dt, trade modules</li> </ul>"},{"location":"changelog/#others","title":"Others","text":"<ul> <li>update changelog, version pump</li> </ul> <p>Full set of changes: <code>0.3.1...0.4.0</code></p>"},{"location":"changelog/#031-2023-03-06","title":"0.3.1 (2023-03-06)","text":""},{"location":"changelog/#new-features_1","title":"New Features","text":"<ul> <li>lower python version to 3.10</li> </ul>"},{"location":"changelog/#others_1","title":"Others","text":"<ul> <li>update changelog, version pump</li> </ul> <p>Full set of changes: <code>0.3.0...0.3.1</code></p>"},{"location":"changelog/#030-2023-03-06","title":"0.3.0 (2023-03-06)","text":""},{"location":"changelog/#new-features_2","title":"New Features","text":"<ul> <li>add iterable utils</li> </ul>"},{"location":"changelog/#docs","title":"Docs","text":"<ul> <li>update UI</li> </ul>"},{"location":"changelog/#others_2","title":"Others","text":"<ul> <li>update changelog, version pump</li> </ul> <p>Full set of changes: <code>0.2.2...0.3.0</code></p>"},{"location":"changelog/#022-2023-02-24","title":"0.2.2 (2023-02-24)","text":""},{"location":"changelog/#docs_1","title":"Docs","text":"<ul> <li>update README</li> </ul>"},{"location":"changelog/#others_3","title":"Others","text":"<ul> <li>fix release trigger</li> <li>update changelog, version pump</li> </ul> <p>Full set of changes: <code>0.2.0...0.2.2</code></p>"},{"location":"changelog/#020-2023-02-24","title":"0.2.0 (2023-02-24)","text":""},{"location":"changelog/#others_4","title":"Others","text":"<ul> <li>trigger by create release instead of push</li> <li>add test and docs</li> </ul>"},{"location":"license/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2023 Kelvin Ng</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"reference/","title":"References","text":""},{"location":"reference/#kng.iter","title":"<code>kng.iter</code>","text":"<p>utils for iterables</p>"},{"location":"reference/#kng.iter.list_2d","title":"<code>list_2d(arr: list, row_size: int, fill_end: int = None) -&gt; list[list]</code>","text":"<p>convert 1D list to 2D list, aka. rows</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; list_2d([1,2,3,4,5], row_size=2)\n[[1, 2], [3, 4], [5]]\n</code></pre> <pre><code>&gt;&gt;&gt; list_2d([1,2,3,4,5], row_size=2, fill_end=0)\n[[1, 2], [3, 4], [5, 0]]\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>arr</code> <code>list</code> <p>1D list</p> required <code>row_size</code> <code>int</code> <p>len of the rows</p> required <code>fill_end</code> <code>Any</code> <p>obj to fill the last chuck. None means don't fill.</p> <code>None</code> Source code in <code>kng/iter.py</code> <pre><code>def list_2d(arr: list, row_size: int, fill_end=None) -&gt; list[list]:\n\"\"\"convert 1D list to 2D list, aka. rows\n    Examples:\n        &gt;&gt;&gt; list_2d([1,2,3,4,5], row_size=2)\n        [[1, 2], [3, 4], [5]]\n        &gt;&gt;&gt; list_2d([1,2,3,4,5], row_size=2, fill_end=0)\n        [[1, 2], [3, 4], [5, 0]]\n    Args:\n        arr (list): 1D list\n        row_size (int): len of the rows\n        fill_end (Any, optional): obj to fill the last chuck. None means don't fill.\n    \"\"\"\nop = []\nfor i in range(0, len(arr), row_size):\nrow = arr[i : i + row_size]\nif fill_end is not None and len(row) &lt; row_size:\nshortage = row_size - len(row)\nrow = row + [fill_end] * shortage\nop.append(row)\nreturn op\n</code></pre>"},{"location":"reference/#kng.misc","title":"<code>kng.misc</code>","text":"<p>misc utility functions</p>"},{"location":"reference/#kng.misc.check_pypi_availability","title":"<code>check_pypi_availability(pkg_name: str) -&gt; bool</code>","text":"<p>check PyPi package name availability</p> <p>Parameters:</p> Name Type Description Default <code>pkg_name</code> <code>str</code> <p>package name to be checked</p> required <p>Examples:</p> <pre><code>&gt;&gt;&gt; check_pypi_availability('ktemplate')\nFalse\n</code></pre> <pre><code>&gt;&gt;&gt; check_pypi_availability('ktemplate-bla-bla-bla')\nTrue\n</code></pre> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>if package name avaialbe return True otherwise False</p> Source code in <code>kng/misc.py</code> <pre><code>def check_pypi_availability(pkg_name: str) -&gt; bool:\n\"\"\"check PyPi package name availability\n    Args:\n        pkg_name (str): package name to be checked\n    Examples:\n        &gt;&gt;&gt; check_pypi_availability('ktemplate')\n        False\n        &gt;&gt;&gt; check_pypi_availability('ktemplate-bla-bla-bla')\n        True\n    Returns:\n        bool: if package name avaialbe return True otherwise False\n    \"\"\"\nfrom httpx import get\nurl = f\"https://pypi.org/pypi/{pkg_name}/json\"\nresponse = get(url)\nreturn response.status_code != 200\n</code></pre>"}]}